/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl.uv.app.fq.init;

import cl.uv.app.fq.bo.ControlBo;
import cl.uv.app.fq.bo.MedicoBo;
import cl.uv.app.fq.bo.PacienteBo;
import cl.uv.app.fq.controller.Control;
import cl.uv.app.fq.resource.ResourcesUtil;
import java.text.DecimalFormat;
import java.util.concurrent.TimeUnit;
import javax.annotation.Resources;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.TargetDataLine;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author bnavarro
 */
public class JPRegistroSesionSoplado extends javax.swing.JPanel {

    private static float nivelSoplado1;
    private static int duracionSoplado1;
    private static float nivelSoplado2;
    private static int duracionSoplado2;
    private static float nivelSoplado3;
    private static int duracionSoplado3;
    private static int intengoSoplado = 0;
    private static Thread thread;
    public static TargetDataLine line;
    public static float nivelMaximo = 0.00f;
    private int meterWidth = 10;
    private static long startTime = 0;
    private float amp = 0f;
    private float peak = 0f;
    private static int contadorForGeneral = 0;

    private static float nivelAnterior = 0;
    private ControlBo controlBo;
    private PacienteBo pacienteBo;
    private MedicoBo medicoBo;

    /**
     * Creates new form panel1
     *
     * @param paciente
     * @param medico
     */
    public JPRegistroSesionSoplado(ControlBo controlBo, PacienteBo pacienteBo, MedicoBo medicoBo) {

        initComponents();
        this.controlBo = controlBo;
        this.pacienteBo = pacienteBo;
        this.medicoBo = medicoBo;

        grupoRadio.add(radio1);
        grupoRadio.add(radio2);
        grupoRadio.add(radio3);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        grupoRadio = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnEscuchar1 = new javax.swing.JButton();
        radio1 = new javax.swing.JRadioButton();
        txtEscuchar1 = new javax.swing.JTextField();
        txtEscuchar2 = new javax.swing.JTextField();
        btnEscuchar2 = new javax.swing.JButton();
        radio2 = new javax.swing.JRadioButton();
        txtEscuchar3 = new javax.swing.JTextField();
        radio3 = new javax.swing.JRadioButton();
        btnEscuchar3 = new javax.swing.JButton();
        lblImagenIco = new javax.swing.JLabel();
        lblTop = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        txtIntencidad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        btnEscuchar1.setBackground(new java.awt.Color(255, 255, 255));
        btnEscuchar1.setForeground(new java.awt.Color(51, 51, 51));
        btnEscuchar1.setText("Escuchar");
        btnEscuchar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscuchar1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(btnEscuchar1, gridBagConstraints);

        radio1.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        jPanel1.add(radio1, gridBagConstraints);

        txtEscuchar1.setEditable(false);
        txtEscuchar1.setBackground(new java.awt.Color(255, 255, 255));
        txtEscuchar1.setForeground(new java.awt.Color(0, 0, 0));
        txtEscuchar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEscuchar1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 186;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(txtEscuchar1, gridBagConstraints);

        txtEscuchar2.setEditable(false);
        txtEscuchar2.setBackground(new java.awt.Color(255, 255, 255));
        txtEscuchar2.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 186;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(txtEscuchar2, gridBagConstraints);

        btnEscuchar2.setBackground(new java.awt.Color(255, 255, 255));
        btnEscuchar2.setForeground(new java.awt.Color(51, 51, 51));
        btnEscuchar2.setText("Escuchar");
        btnEscuchar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscuchar2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(btnEscuchar2, gridBagConstraints);

        radio2.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        jPanel1.add(radio2, gridBagConstraints);

        txtEscuchar3.setEditable(false);
        txtEscuchar3.setBackground(new java.awt.Color(255, 255, 255));
        txtEscuchar3.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 186;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(txtEscuchar3, gridBagConstraints);

        radio3.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        jPanel1.add(radio3, gridBagConstraints);

        btnEscuchar3.setBackground(new java.awt.Color(255, 255, 255));
        btnEscuchar3.setForeground(new java.awt.Color(51, 51, 51));
        btnEscuchar3.setText("Escuchar");
        btnEscuchar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscuchar3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        jPanel1.add(btnEscuchar3, gridBagConstraints);

        lblImagenIco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/uv/app/fq/resource/microfono.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 103;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel1.add(lblImagenIco, gridBagConstraints);

        lblTop.setBackground(new java.awt.Color(0, 0, 0));
        lblTop.setFont(new java.awt.Font("Arial Unicode MS", 3, 18)); // NOI18N
        lblTop.setForeground(new java.awt.Color(255, 255, 255));
        lblTop.setText("  Sesión de soplado");
        lblTop.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 14;
        gridBagConstraints.ipadx = 382;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(lblTop, gridBagConstraints);

        btnGuardar.setBackground(new java.awt.Color(255, 255, 255));
        btnGuardar.setForeground(new java.awt.Color(51, 51, 51));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 10, 160, 0);
        jPanel1.add(btnGuardar, gridBagConstraints);

        txtIntencidad.setEditable(false);
        txtIntencidad.setBackground(new java.awt.Color(255, 255, 255));
        txtIntencidad.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 270;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(txtIntencidad, gridBagConstraints);

        jLabel2.setBackground(new java.awt.Color(51, 51, 51));
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Intencidad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Opción 1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(53, 5, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Opción 2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 6, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Opción 3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 6, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEscuchar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscuchar1ActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                ResourcesUtil resource = new ResourcesUtil();
                lblImagenIco.setIcon(new ImageIcon(resource.getMicrofonoEscuchando()));
                intengoSoplado = 1;
                btnEscuchar1.setEnabled(false);
                btnEscuchar2.setEnabled(false);
                btnEscuchar3.setEnabled(false);

                thread = new Thread(new Recorder(JPRegistroSesionSoplado.this));
                thread.start();
                System.out.println("hola");
            }
        });
    }//GEN-LAST:event_btnEscuchar1ActionPerformed

    private void btnEscuchar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscuchar2ActionPerformed

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                btnEscuchar1.setEnabled(false);
                btnEscuchar2.setEnabled(false);
                btnEscuchar3.setEnabled(false);
                intengoSoplado = 2;
                thread = new Thread(new Recorder(JPRegistroSesionSoplado.this));
                thread.start();
            }
        });
    }//GEN-LAST:event_btnEscuchar2ActionPerformed

    private void btnEscuchar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscuchar3ActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                btnEscuchar1.setEnabled(false);
                btnEscuchar2.setEnabled(false);
                btnEscuchar3.setEnabled(false);
                intengoSoplado = 3;
                thread = new Thread(new Recorder(JPRegistroSesionSoplado.this));
                thread.start();
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_btnEscuchar3ActionPerformed

    private void txtEscuchar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEscuchar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEscuchar1ActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        ResourcesUtil rutil = new ResourcesUtil();

        if (txtEscuchar1.getText().isEmpty() || txtEscuchar2.getText().isEmpty() || txtEscuchar3.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tiene que realizar 3 grabaciones\nluego  seleccionar uno.", "Información:", 0, new ImageIcon(rutil.getPulmonShowMessage()));

        } else {
            if (radio1.isSelected()) {
                controlBo.setTiempoSoplado(duracionSoplado1);
                controlBo.setNivelMaximo(nivelSoplado1);
            } else if (radio2.isSelected()) {
                controlBo.setTiempoSoplado(duracionSoplado2);
                controlBo.setNivelMaximo(nivelSoplado2);
            } else {
                controlBo.setTiempoSoplado(duracionSoplado2);
                controlBo.setNivelMaximo(nivelSoplado2);
            }
            Control controlController = new Control();
            if (controlController.insertControl(controlBo) == 1) {
                JOptionPane.showMessageDialog(null, "Control Iniciado exitosamente!.", "Información:", 0, new ImageIcon(rutil.getPulmonShowMessage()));
                jPanel1.removeAll();
                jPanel1.repaint();
                jPanel1.revalidate();

//                JPPerfilPaciente panel = new JPPerfilPaciente(pacienteBo, medicoBo);
//                jPanel1.add(panel);
//                jPanel1.repaint();
//                jPanel1.revalidate();
            } else {
                JOptionPane.showMessageDialog(null, "Control no se ha podido Guardar control.", "Información:", 0, new ImageIcon(rutil.getPulmonShowMessage()));

            }
        }


    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnEscuchar1;
    public static javax.swing.JButton btnEscuchar2;
    public static javax.swing.JButton btnEscuchar3;
    private javax.swing.JButton btnGuardar;
    private javax.swing.ButtonGroup grupoRadio;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JLabel lblImagenIco;
    private javax.swing.JLabel lblTop;
    private javax.swing.JRadioButton radio1;
    private javax.swing.JRadioButton radio2;
    private javax.swing.JRadioButton radio3;
    public static javax.swing.JTextField txtEscuchar1;
    public static javax.swing.JTextField txtEscuchar2;
    public static javax.swing.JTextField txtEscuchar3;
    public static javax.swing.JTextField txtIntencidad;
    // End of variables declaration//GEN-END:variables
    public void setAmplitude(float amp) {
//        System.out.println(amp);
        this.amp = Math.abs(amp);
    }

    public void setPeak(float peak) {
        this.peak = Math.abs(peak);

    }

    static class Recorder implements Runnable {

        final JPRegistroSesionSoplado meter;

        Recorder(final JPRegistroSesionSoplado meter) {
            this.meter = meter;
        }

        @Override
        public void run() {
            AudioFormat fmt = new AudioFormat(44100f, 16, 1, true, false);
            final int bufferByteSize = 2048;

            try {
                line = AudioSystem.getTargetDataLine(fmt);
                line.open(fmt, bufferByteSize);
            } catch (LineUnavailableException e) {
                System.err.println("error en: " + e);
                return;
            }

            byte[] buf = new byte[bufferByteSize];
            float[] samples = new float[bufferByteSize / 2];

            float lastPeak = 0f;

            line.start();
            for (int b; (b = line.read(buf, 0, buf.length)) > -1;) {
                contadorForGeneral++;
                // convert bytes to samples here
                for (int i = 0, s = 0; i < b;) {
                    int sample = 0;

                    sample |= buf[i++] & 0xFF; // (reverse these two lines
                    sample |= buf[i++] << 8;   //  if the format is big endian)

                    // normalize to range of +/-1.0f
                    samples[s++] = sample / 32768f;
                }

                float rms = 0f;
                float peak = 0f;
                for (float sample : samples) {

                    float abs = Math.abs(sample);
                    if (abs > peak) {
                        peak = abs;
                    }

                    rms += sample * sample;
                }

                rms = (float) Math.sqrt(rms / samples.length);

                if (lastPeak > peak) {
                    peak = lastPeak * 0.875f;
                }

                lastPeak = peak;

                setMeterOnEDT(rms, peak);

                float nivelActualSoplado = rms * 50;

                if (nivelActualSoplado > 7) {
                    if (nivelAnterior < 7) {
//                        System.out.println("Iniciando");
                        startTime = System.currentTimeMillis();

                    }
                    if (nivelMaximo < nivelActualSoplado) {
                        nivelMaximo = nivelActualSoplado;
                    }
                    float nivelEscuchado = nivelActualSoplado / 10;
                    txtIntencidad.setText(String.valueOf(nivelEscuchado));
//                    System.out.println("intengoSoplado: " + intengoSoplado);

                } else if (nivelActualSoplado < 7) {
                    if (nivelAnterior > 7) {
                        long endTime = TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - startTime);
//                        System.out.println("Duración: " + endTime + " Segundos");
//                        System.out.println("Nivel Máximo: " + nivelMaximo / 10);
//                        System.out.println("finalizado\nVuelvo a escuchar en 5 segundos...");
//                        System.out.println("Listo!");
//                        System.out.println("----------------------------------------");
                        int duracion = (int) endTime;

                        DecimalFormat df = new DecimalFormat();
                        df.setMaximumFractionDigits(2);

                        System.out.println();
                        switch (intengoSoplado) {
                            case 1:
                                txtEscuchar1.setText("Duración: " + duracion + ", Nivel Máximo: " + nivelMaximo / 10);
                                duracionSoplado1 = duracion;
                                nivelSoplado1 = nivelMaximo / 10;
                                break;
                            case 2:
                                txtEscuchar2.setText("Duración: " + duracion + ", Nivel Máximo: " + nivelMaximo / 10);
                                duracionSoplado2 = duracion;
                                nivelSoplado2 = nivelMaximo / 10;
                                break;
                            case 3:
                                txtEscuchar3.setText("Duración: " + duracion + ", Nivel Máximo: " + nivelMaximo / 10);
                                duracionSoplado3 = duracion;
                                nivelSoplado3 = nivelMaximo / 10;
                                break;
                        }
                        ResourcesUtil resource = new ResourcesUtil();
                        lblImagenIco.setIcon(new ImageIcon(resource.getMicrofono()));
                        btnEscuchar1.setEnabled(true);
                        btnEscuchar2.setEnabled(true);
                        btnEscuchar3.setEnabled(true);
                        txtIntencidad.setText("");
                        line.close();
                        nivelMaximo = 0;
                        startTime = 0;
                        contadorForGeneral = 0;
                        nivelAnterior = 0;
                        intengoSoplado = 0;
                        thread.stop();

                    }
                }

                nivelAnterior = nivelActualSoplado;

            }
        }

        void setMeterOnEDT(final float rms, final float peak) {
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    meter.setAmplitude(rms);

                    meter.setPeak(peak);
                }
            });
        }

    }

}
